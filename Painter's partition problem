bool isPossible(vector<int> &boards,  int mid, int k) {
    int painter = 1;
    int board_count= 0;
    
    for(int i = 0; i < boards.size(); i++) {
        if(board_count + boards[i] <= mid) {
            board_count += boards[i];
        }
        else {
            painter++;
            if(painter > k || boards[i] > mid) {
                return false;
            }
            board_count = boards[i];
        }
    }
    return true;
}



int findLargestMinDistance(vector<int> &boards, int k)
{
     

    int s = 0;
    int sum = 0;
    
    for(int i = 0; i < boards.size(); i++) {
        sum += boards[i];
    }
    int e = sum;
    int ans = -1;
    
    while(s <= e) {
        int mid = s + (e - s) / 2; // Calculate mid inside the loop
        
        if(isPossible(boards,  mid,k)) {
            ans = mid;
            e = mid - 1;
        }
        else {
            s = mid + 1;
        }
    }
    return ans;

}
